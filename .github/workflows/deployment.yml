name: deploy gc back
on: [push]
env:
  IMAGE: gc-proxy
  VERSION: 0.0.1-SNAPSHOT
jobs:
  create-folder:
    name: create folder
    runs-on: ubuntu-latest

    steps:
      - name: execute commands
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            mkdir /opt/applications/gc/${{ENV.IMAGE}}
            ls -al /opt/applications/gc

  run-container:
    name: run container
    runs-on: ubuntu-latest
    needs: [ 'create-folder' ]
    steps:
      - name: cloner le repertoire
        uses: actions/checkout@master
      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: "compose.yml,api-gc.conf,db-gc.conf,web-gc.conf"
          target: /opt/applications/gc/${{env.IMAGE}}
      - name: execute commands to run container
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            docker network inspect app-network >/dev/null 2>&1 || docker network create app-network        
            docker compose -f /opt/applications/gc/${{ env.IMAGE }}/compose.yml up -d
            
            docker network inspect app-network || echo "Network not found."
            docker ps -a || echo "No containers running."
            docker logs gc-proxy || echo "No logs available for gc-proxy."
            
